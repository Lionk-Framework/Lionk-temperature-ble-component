@using Lionk.Core.Component
@using Lionk.Core.View
@using MudBlazor
@attribute [ViewOfAttribute("Ble temperature sensor detail view", typeof(BleTemperature), typeof(BleTemperatureDetail), ViewContext.Detail)]

<MudGrid>

    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">Last notification</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.LastNotifyDateTime.ToString("f")</MudText>
    </MudItem>

    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">Battery</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.GetPercentage()%</MudText>
    </MudItem>


    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">Temperature</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.GetTemperature() @Component.Measures[(int)Component.TemperatureType].Unit </MudText>
    </MudItem>

    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">Time</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.LastExecution.ToString("hh.mm.ss")</MudText>
    </MudItem>

    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">Read frequency</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.Period.Seconds sec.</MudText>
    </MudItem>

    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">RSSI</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.BleService?.GetRssiOfDevice(Component.DeviceAddress)</MudText>
    </MudItem>

    <MudItem xs="12" style="display: flex;">
        <MudText style="flex: 1;" Typo="Typo.h6">Mac address</MudText>
        <MudText style="flex: 1;" Typo="Typo.body1">@Component.DeviceAddress</MudText>
    </MudItem>
</MudGrid>


@code {

    [Parameter] public BleTemperature Component { get; set; } =null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ArgumentNullException.ThrowIfNull(Component);
    }

}
